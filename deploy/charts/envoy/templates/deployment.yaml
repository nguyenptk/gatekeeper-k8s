apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  labels:
    app: {{ .Values.service.name }}
spec:
  replicas: {{ if .Values.autoscaling.enabled }}
     {{ .Values.autoscaling.minReplicas }}
   {{ else }}
     {{ .Values.replicaCount | default 2 }}
   {{ end }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
    spec:
      containers:
        - name: {{ .Values.service.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "-c"
            - "/etc/envoy/envoy.yaml"
          ports:
            - containerPort: {{ .Values.service.port }}
          volumeMounts:
            - name: {{ .Values.service.name }}-config
              mountPath: /etc/envoy
              readOnly: true
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: {{ .Values.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: {{ .Values.service.port }}
            initialDelaySeconds: 2
            periodSeconds: 5
          resources:
            requests:
              cpu:    {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu:    {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}

      volumes:
        - name: {{ .Values.service.name }}-config
          configMap:
            name: {{ .Values.service.name }}-config
            